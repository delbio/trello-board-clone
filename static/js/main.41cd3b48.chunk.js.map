{"version":3,"sources":["state/boardData.js","storage.js","components/AutoSizeTextArea.js","components/Card.js","components/AddCard.js","components/ListTitle.js","components/List.js","components/AddList.js","components/Board.js","App.js","index.js"],"names":["boardData","boardDataSubject","Subject","subscribe","_boardData","addList","listTitle","list","position","Object","keys","length","list_title","cards","uuid","next","localforage","setItem","getItem","then","defaultBoardData","catch","err","console","log","card_content","AutoSizeTextArea","placeholder","editMode","onSave","updateValue","onBlur","useState","textAreaValue","setTextAreaValue","textAreaRef","useRef","useEffect","resizeTextArea","current","focus","select","style","height","scrollHeight","TextArea","ref","value","onChange","e","target","rows","onKeyDown","keyCode","preventDefault","blur","spellCheck","styled","textarea","props","Card","listId","cardId","cardData","setEditMode","content","updateCard","contentClick","deleteClick","deleteCard","draggableId","index","disableInteractiveElementBlocking","draggableProvided","draggableSnapshot","CardDraggable","innerRef","draggableProps","dragHandleProps","TextAreaWrapper","onClick","Delete","div","AddCard","compose","setCompose","Link","className","Wrapper","listCards","card","addCard","ListTitle","setDragBlocking","title","setUpdateValue","_title","trim","setTimeout","updateListTitle","Container","deleteList","List","data","listData","cardIds","sort","a","b","dragBlocking","provided","ListWrapper","ListContent","droppableId","droppableProvided","droppableSnapshot","ListDroppable","map","id","key","AddList","setListTitle","refInput","Button","Input","type","input","Board","setBoardData","sub","bd","unsubscribe","listIds","onBeforeDragStart","tmp","document","activeElement","tagName","toUpperCase","onDragStart","onDragEnd","direction","BoardContainer","droppableProps","result","destination","initialPosition","finalPosition","source","values","forEach","Math","min","max","sourceCards","destinationCards","movingCard","reorderCardPosition","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.41cd3b48.chunk.js","sourcesContent":["import { Subject } from \"rxjs\";\nimport uuid from \"uuidv4\";\n\nlet boardData = null;\n\nexport const boardDataSubject = new Subject();\n\nboardDataSubject.subscribe(_boardData => {\n  boardData = _boardData;\n});\n\n// TODO I should generalise this function (DRY)\nexport const reorderListPosition = (initialPosition, finalPosition) => {\n  Object.values(boardData).forEach(list => {\n    if (list.position === initialPosition) {\n      list.position = finalPosition;\n      return;\n    }\n    if (\n      list.position < Math.min(initialPosition, finalPosition) ||\n      list.position > Math.max(initialPosition, finalPosition)\n    ) {\n      return;\n    }\n    if (initialPosition < finalPosition) {\n      list.position--;\n      return;\n    }\n    list.position++;\n  });\n\n  boardDataSubject.next({ ...boardData });\n};\n\nexport const reorderCardPosition = (source, destination, cardId) => {\n  // moving card within same list\n  if (source.droppableId === destination.droppableId) {\n    const { cards } = boardData[source.droppableId];\n    Object.values(cards).forEach(card => {\n      if (card.position === source.index) {\n        card.position = destination.index;\n        return;\n      }\n      if (\n        card.position < Math.min(source.index, destination.index) ||\n        card.position > Math.max(source.index, destination.index)\n      ) {\n        return;\n      }\n      if (source.index < destination.index) {\n        card.position--;\n        return;\n      }\n      card.position++;\n    });\n  }\n  // moving card between different lists\n  else {\n    const sourceCards = boardData[source.droppableId].cards;\n    const destinationCards = boardData[destination.droppableId].cards;\n    const movingCard = boardData[source.droppableId].cards[cardId];\n    Object.values(sourceCards).forEach(card => {\n      if (card.position > source.index) {\n        card.position--;\n      }\n    });\n    Object.values(destinationCards).forEach(card => {\n      if (card.position >= destination.index) {\n        card.position++;\n      }\n    });\n    delete boardData[source.droppableId].cards[cardId];\n    movingCard.position = destination.index;\n    boardData[destination.droppableId].cards[cardId] = movingCard;\n  }\n\n  boardDataSubject.next({ ...boardData });\n};\n\nexport const addCard = (listId, content) => {\n  const listCards = boardData[listId].cards;\n  const position = Object.keys(listCards).length;\n  const card = { position, card_content: content };\n  boardData[listId].cards[uuid()] = card;\n\n  // refactor to only update changed list for optimisation???\n  boardDataSubject.next({ ...boardData });\n};\n\nexport const updateCard = (listId, cardId, content) => {\n  boardData[listId].cards[cardId].card_content = content;\n  boardDataSubject.next({ ...boardData });\n};\n\nexport const addList = listTitle => {\n  const position = Object.keys(boardData).length;\n  const list = { position, list_title: listTitle, cards: {} };\n  boardData[uuid()] = list;\n  boardDataSubject.next({ ...boardData });\n};\n\nexport const updateListTitle = (listId, listTitle) => {\n  boardData[listId].list_title = listTitle;\n  boardDataSubject.next({ ...boardData });\n};\n\nexport const deleteList = listId => {\n  delete boardData[listId];\n  boardDataSubject.next({ ...boardData });\n};\n\nexport const deleteCard = (listId, cardId) => {\n  delete boardData[listId].cards[cardId];\n  boardDataSubject.next({ ...boardData });\n};\n","import localforage from \"localforage\";\nimport { boardDataSubject } from \"./state/boardData\";\nimport uuid from \"uuidv4\";\n\nboardDataSubject.subscribe(boardData => {\n  localforage.setItem(\"boardData\", boardData);\n});\n\nlocalforage\n  .getItem(\"boardData\")\n  .then(function(boardData) {\n    // console.log(\"localforage then\", boardData);\n\n    // first time run, populate board with default data\n    if (boardData === null) {\n      boardDataSubject.next(defaultBoardData);\n      return;\n    }\n\n    boardDataSubject.next(boardData);\n  })\n  .catch(function(err) {\n    console.log(\"localforage catch\", err);\n  });\n\nconst defaultBoardData = {\n  \"5cac8c9e-f91b-438a-9e18-00cea4667ee3\": {\n    position: 0,\n    list_title: \"list title 0\",\n    cards: {\n      \"90a74fbb-0bde-4d1e-b172-ddee2857d6bd\": {\n        position: 0,\n        card_content: \"card content 0\"\n      },\n      \"52f8d85a-0196-46f0-96f3-5878846851dd\": {\n        position: 1,\n        card_content: \"card content 1\"\n      },\n      \"d61036f5-7c1f-4563-b91f-20856f73c018\": {\n        position: 2,\n        card_content: \"card content 2\"\n      }\n    }\n  },\n  \"e76e7044-be79-4d02-a9c7-d76cf0139470\": {\n    position: 2,\n    list_title: \"list title 1\",\n    cards: {\n      \"f85672b7-3704-4f66-977d-9fbf44557c9b\": {\n        position: 0,\n        card_content: \"card content 3\"\n      },\n      \"76410d16-1fd3-43b2-8350-a5758ee0c4f4\": {\n        position: 1,\n        card_content: \"card content 4\"\n      }\n    }\n  },\n  \"860c2140-f2cd-4e9a-8b82-179137e19b1e\": {\n    position: 1,\n    list_title: \"list title 2\",\n    cards: {\n      \"9afa5554-772b-4909-a6cf-9b52a8177072\": {\n        position: 0,\n        card_content: \"card content 5\"\n      },\n      \"b1206375-b007-4865-b39c-9be55e79774d\": {\n        position: 1,\n        card_content: \"card content 6\"\n      },\n      \"6d886884-647b-4147-b1b2-a4316c442caf\": {\n        position: 2,\n        card_content: \"card content 7\"\n      }\n    }\n  }\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\n\n// do I need onBlur\nconst AutoSizeTextArea = ({\n  placeholder,\n  editMode,\n  onSave,\n  updateValue,\n  onBlur\n}) => {\n  const [textAreaValue, setTextAreaValue] = useState(\"\");\n  const textAreaRef = useRef(null);\n  useEffect(() => {\n    setTextAreaValue(updateValue);\n  }, [updateValue]);\n  useEffect(() => {\n    resizeTextArea();\n  }, [textAreaValue]);\n\n  useEffect(() => {\n    if (editMode) {\n      textAreaRef.current.focus();\n      textAreaRef.current.select();\n    }\n  }, [editMode]);\n\n  const resizeTextArea = () => {\n    textAreaRef.current.style.height = \"auto\";\n    textAreaRef.current.style.height = textAreaRef.current.scrollHeight + \"px\";\n  };\n  const onChange = e => {\n    setTextAreaValue(e.target.value);\n  };\n\n  const onKeyDown = e => {\n    // enter pressed\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      onSave(textAreaValue);\n      textAreaRef.current.blur();\n    }\n  };\n  return (\n    <TextArea\n      ref={textAreaRef}\n      value={textAreaValue}\n      onChange={onChange}\n      rows={1}\n      onKeyDown={onKeyDown}\n      onBlur={() => onBlur(textAreaValue)}\n      spellCheck=\"false\"\n      editMode={editMode}\n      placeholder={placeholder}\n    ></TextArea>\n  );\n};\nexport default AutoSizeTextArea;\n\nconst TextArea = styled.textarea`\n  cursor: ${props => (props.editMode ? \"text\" : \"pointer\")};\n  height: auto;\n  overflow-y: hidden;\n  margin: -4px 0;\n  padding: 4px 8px;\n  border: none;\n  resize: none;\n  border-radius: 3px;\n  width: 100%;\n  /* font-weight: 600; */\n  background: transparent;\n  &:focus {\n    background: white;\n    box-shadow: inset 0 0 0 2px #0079bf;\n    outline: 0;\n  }\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { updateCard, deleteCard } from \"../state/boardData\";\nimport AutoSizeTextArea from \"./AutoSizeTextArea\";\n\nconst Card = ({ listId, cardId, cardData }) => {\n  const [editMode, setEditMode] = useState(false);\n\n  const onSave = content => {\n    updateCard(listId, cardId, content);\n    setEditMode(false);\n  };\n\n  const contentClick = () => {\n    setEditMode(true);\n  };\n\n  const deleteClick = () => {\n    deleteCard(listId, cardId);\n  };\n\n  return (\n    <Draggable\n      draggableId={cardId}\n      index={cardData.position}\n      disableInteractiveElementBlocking={!editMode}\n    >\n      {(draggableProvided, draggableSnapshot) => (\n        <CardDraggable\n          ref={draggableProvided.innerRef}\n          {...draggableProvided.draggableProps}\n          {...draggableProvided.dragHandleProps}\n          editMode={editMode}\n        >\n          <TextAreaWrapper onClick={contentClick}>\n            <AutoSizeTextArea\n              onSave={onSave}\n              updateValue={cardData.card_content}\n              // should i cancel???\n              onBlur={onSave}\n              editMode={editMode}\n            ></AutoSizeTextArea>\n          </TextAreaWrapper>\n\n          <Delete onClick={deleteClick}>&#xE918;</Delete>\n        </CardDraggable>\n      )}\n    </Draggable>\n  );\n};\nexport default Card;\n\n// TODO refactor so code shared title and content\n\nconst Delete = styled.div`\n  position: absolute;\n  top: 4px;\n  right: 4px;\n  font-family: trellicons;\n  border-radius: 3px;\n  height: 23px;\n  width: 23px;\n  line-height: 23px;\n  text-align: center;\n  &:hover {\n    background-color: rgba(9, 30, 66, 0.08);\n  }\n  visibility: hidden;\n  cursor: pointer;\n`;\n\nconst TextAreaWrapper = styled.div`\n  /* padding: 10px 8px; */\n  padding-top: 6px;\n  padding-bottom: 2px;\n  /* padding-right: 36px; */\n\n  /* & textarea {\n    TODO override things like font-weight\n  } */\n`;\n\nconst CardDraggable = styled.div`\n  background-color: #fff;\n  border-radius: 3px;\n  /* box-shadow: 0 1px 0 rgba(9, 30, 66, 0.25); */\n  box-shadow: ${props =>\n    props.editMode ? \"none\" : \"0 2px 4px rgba(2, 2, 2, 0.6)\"};\n  margin-bottom: 8px;\n  position: relative;\n\n  /* cursor: grab; */\n  /* && {\n    cursor: pointer;\n  } */\n\n  &:active {\n    /* cursor: grabbing; */\n  }\n\n  &:hover ${Delete} {\n    visibility: visible;\n  }\n`;\n\n// const Content = styled.div`\n//   padding: 6px 8px 2px;\n// `;\n\n// const ContentSpan = styled.div`\n//   margin-bottom: 4px;\n// `;\n\n// const EditButton = styled.div`\n//   background-color: #ebecf0;\n//   font-family: trellicons;\n//   position: absolute;\n//   padding: 4px;\n//   right: 2px;\n//   top: 2px;\n//   display: none;\n//   cursor: pointer;\n//   ${CardDraggable}:hover & {\n//     display: block;\n//   }\n// `;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { addCard } from \"../state/boardData\";\nimport AutoSizeTextArea from \"./AutoSizeTextArea\";\n\nconst AddCard = ({ listId }) => {\n  const [compose, setCompose] = useState(false);\n\n  if (!compose) {\n    return (\n      <Link onClick={() => setCompose(true)}>\n        <span className=\"trellicons\">&#xE901;</span>{\" \"}\n        <span>Add another card</span>\n      </Link>\n    );\n  }\n\n  const onSave = content => {\n    addCard(listId, content);\n    setCompose(false);\n  };\n\n  const cancel = () => {\n    setCompose(false);\n  };\n\n  return (\n    <Wrapper>\n      <AutoSizeTextArea\n        onSave={onSave}\n        updateValue=\"\"\n        onBlur={cancel}\n        editMode={true}\n        placeholder=\"Enter a title for this card…\"\n      ></AutoSizeTextArea>\n    </Wrapper>\n  );\n};\nexport default AddCard;\n\nconst Link = styled.div`\n  cursor: pointer;\n  /* TODO isDraggingOver */\n  /* pointer-events: none; */\n  padding: 8px;\n  &:hover span:last-child {\n    text-decoration: underline;\n  }\n  &:hover {\n    background-color: rgba(9, 30, 66, 0.08);\n  }\n`;\n\nconst Wrapper = styled.div`\n  padding: 8px;\n`;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport AutoSizeTextArea from \"./AutoSizeTextArea\";\nimport { updateListTitle, deleteList } from \"../state/boardData\";\n\n// Repeat my editcard form logic, stuff abstracting to DRY\n\nconst ListTitle = ({ setDragBlocking, dragHandleProps, listId, title }) => {\n  const [editMode, setEditMode] = useState(false);\n  const [updateValue, setUpdateValue] = useState(title);\n\n  const onSave = _title => {\n    console.log(\"_title\", _title);\n\n    if (_title.trim() === \"\") {\n      // this is hack, prevent user accidently deleting title\n      setUpdateValue(\"\");\n      setTimeout(() => setUpdateValue(title), 0);\n    } else {\n      updateListTitle(listId, _title);\n    }\n\n    setDragBlocking(false);\n    setEditMode(false);\n  };\n  // const onBlur = _title => {\n  //   console.log(\"blur\");\n  //   updateListTitle(listId, _title);\n  // };\n\n  const titleClick = () => {\n    console.log(\"click\");\n    setDragBlocking(true);\n    setEditMode(true);\n  };\n\n  const deleteClick = () => {\n    console.log(\"delete click\");\n    deleteList(listId);\n  };\n\n  return (\n    <Container {...dragHandleProps}>\n      <TextAreaWrapper onClick={titleClick}>\n        <AutoSizeTextArea\n          onSave={onSave}\n          updateValue={updateValue}\n          onBlur={onSave}\n          editMode={editMode}\n        ></AutoSizeTextArea>\n      </TextAreaWrapper>\n\n      <Delete onClick={deleteClick}>&#xE918;</Delete>\n    </Container>\n  );\n};\nexport default ListTitle;\n\nconst Delete = styled.div`\n  position: absolute;\n  top: 4px;\n  right: 4px;\n  font-family: trellicons;\n  border-radius: 3px;\n  height: 32px;\n  width: 32px;\n  line-height: 32px;\n  text-align: center;\n  &:hover {\n    background-color: rgba(9, 30, 66, 0.08);\n  }\n  visibility: hidden;\n`;\n\nconst Container = styled.div`\n  position: relative;\n  && {\n    cursor: pointer;\n  }\n  &:hover ${Delete} {\n    visibility: visible;\n  }\n`;\n\nconst TextAreaWrapper = styled.div`\n  padding: 10px 8px;\n  padding-right: 36px;\n\n  & textarea {\n    font-weight: 600;\n  }\n`;\n\n// const TextArea = styled.textarea`\n//   height: auto;\n//   overflow-y: hidden;\n//   margin: -4px 0;\n//   padding: 4px 8px;\n//   border: none;\n//   resize: none;\n//   border-radius: 3px;\n//   width: 100%;\n//   font-weight: 600;\n//   background: transparent;\n//   &:focus {\n//     background: white;\n//   }\n// `;\n","import React, { useState } from \"react\";\nimport Card from \"./Card\";\nimport AddCard from \"./AddCard\";\nimport ListTitle from \"./ListTitle\";\nimport styled from \"styled-components\";\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\n\nconst sortFn = data => (a, b) => {\n  return data[a].position - data[b].position;\n};\n\nconst List = ({ listId, listData }) => {\n  const cardIds = Object.keys(listData.cards).sort(sortFn(listData.cards));\n\n  const [dragBlocking, setDragBlocking] = useState(false);\n\n  return (\n    <Draggable\n      disableInteractiveElementBlocking={!dragBlocking}\n      draggableId={listId}\n      index={listData.position}\n    >\n      {provided => (\n        <ListWrapper ref={provided.innerRef} {...provided.draggableProps}>\n          <ListContent>\n            <ListTitle\n              dragHandleProps={provided.dragHandleProps}\n              listId={listId}\n              title={listData.list_title}\n              setDragBlocking={setDragBlocking}\n            ></ListTitle>\n\n            <Droppable droppableId={listId}>\n              {(droppableProvided, droppableSnapshot) => (\n                <ListDroppable ref={droppableProvided.innerRef}>\n                  {cardIds.map(id => {\n                    return (\n                      <Card\n                        key={id}\n                        cardId={id}\n                        listId={listId}\n                        cardData={listData.cards[id]}\n                      ></Card>\n                    );\n                  })}\n                  {droppableProvided.placeholder}\n                </ListDroppable>\n              )}\n            </Droppable>\n            <AddCard listId={listId}></AddCard>\n          </ListContent>\n        </ListWrapper>\n      )}\n    </Draggable>\n  );\n};\nexport default List;\n\nconst ListWrapper = styled.div`\n  &:first-child {\n    margin-left: 8px;\n  }\n  width: 272px;\n  display: inline-block;\n  flex: 0 0 272px;\n  margin: 0 4px;\n`;\nconst ListContent = styled.div`\n  background-color: #ebecf0;\n  border-radius: 3px;\n`;\n\n// TODO calc min-height, current height + line height\n// or I could just copy exact functionality of trello\nconst ListDroppable = styled.div`\n  min-height: 50px;\n  /* background-color: pink; */\n\n  margin: 0 4px;\n  padding: 0 4px;\n`;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { addList } from \"../state/boardData\";\n\nconst AddList = () => {\n  const [compose, setCompose] = useState(false);\n  const [listTitle, setListTitle] = useState(\"\");\n  const onChange = e => {\n    setListTitle(e.target.value);\n  };\n  const refInput = useRef(null);\n\n  useEffect(() => {\n    if (compose) {\n      refInput.current.focus();\n    }\n  }, [compose]);\n\n  const onKeyDown = e => {\n    if (e.keyCode === 13) {\n      // e.preventDefault();\n      addList(listTitle);\n      setListTitle(\"\");\n      setCompose(false);\n    }\n  };\n\n  const onBlur = () => {\n    if (listTitle.length > 0) {\n      addList(listTitle);\n      setListTitle(\"\");\n    }\n    setCompose(false);\n  };\n\n  return (\n    <Container>\n      <Wrapper compose={compose}>\n        {compose || (\n          <Button onClick={() => setCompose(true)}>\n            <span className=\"trellicons\">&#xE901;</span>{\" \"}\n            <span>Add another list</span>\n          </Button>\n        )}\n        {compose && (\n          <Input\n            ref={refInput}\n            type=\"text\"\n            value={listTitle}\n            onChange={onChange}\n            onKeyDown={onKeyDown}\n            onBlur={onBlur}\n            placeholder=\"Enter list title...\"\n          />\n        )}\n      </Wrapper>\n    </Container>\n  );\n};\nexport default AddList;\n\nconst Container = styled.div`\n  width: 272px;\n  flex: 0 0 272px;\n  /* instead of margin right for overflow-x scroll */\n  border-right: 8px solid transparent;\n  margin-left: 4px;\n`;\n\nconst Wrapper = styled.div`\n  border-radius: 3px;\n  padding: 8px;\n  display: flex;\n  flex-direction: column;\n  background-color: ${props =>\n    props.compose ? \"#ebecf0\" : \"hsla(0, 0%, 100%, 0.24)\"};\n  color: #fff;\n  &:hover {\n    /* background-color: ${props =>\n      props.compose ? \"#ebecf0\" : \"hsla(0, 0%, 100%, 0.32)\"}; */\n\n    /* alternative to ternary */\n    background-color: hsla(0, 0%, 100%, 0.32);\n    ${props => props.compose && \"background-color: #ebecf0;\"}\n  }\n`;\n\nconst Button = styled.div`\n  cursor: pointer;\n`;\n\nconst Input = styled.input`\n  border-radius: 3px;\n  margin: -4px 0;\n  padding: 4px 8px;\n  border: none;\n  &:focus {\n    box-shadow: inset 0 0 0 2px #0079bf;\n    outline: 0;\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  boardDataSubject,\n  reorderListPosition,\n  reorderCardPosition\n} from \"../state/boardData\";\nimport List from \"./List\";\nimport AddList from \"./AddList\";\nimport styled from \"styled-components\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\n\nconst sortFn = data => (a, b) => {\n  return data[a].position - data[b].position;\n};\n\nconst Board = () => {\n  const [boardData, setBoardData] = useState(null);\n  useEffect(() => {\n    const sub = boardDataSubject.subscribe(bd => setBoardData(bd));\n    return () => sub.unsubscribe();\n  }, []);\n\n  if (!boardData) {\n    return <div>loading</div>;\n  }\n\n  const onBeforeDragStart = tmp => {\n    console.log(\"onBeforeDragStart\");\n    if (document.activeElement.tagName.toUpperCase() === \"TEXTAREA\") {\n      console.log(\"here\");\n      document.activeElement.blur();\n    }\n  };\n\n  const listIds = Object.keys(boardData).sort(sortFn(boardData));\n\n  return (\n    <DragDropContext\n      onBeforeDragStart={onBeforeDragStart}\n      onDragStart={onDragStart}\n      onDragEnd={onDragEnd}\n    >\n      <Droppable droppableId=\"board\" type=\"COLUMN\" direction=\"horizontal\">\n        {provided => (\n          <BoardContainer ref={provided.innerRef} {...provided.droppableProps}>\n            {listIds.map(id => {\n              return (\n                <List\n                  key={id}\n                  listId={id}\n                  listData={boardData[id]}\n                ></List>\n              );\n            })}\n            {provided.placeholder}\n            <AddList></AddList>\n          </BoardContainer>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\nexport default Board;\n\nconst BoardContainer = styled.div`\n  white-space: nowrap;\n  overflow-x: auto;\n  height: 100%;\n  display: flex;\n`;\n\nconst onDragStart = tmp => {\n  // console.log(\"TCL: onDragStart -> tmp\", tmp);\n};\n\nconst onDragEnd = result => {\n  console.log(\"TCL: result\", result);\n  // TODO: reorder our column\n\n  // dropped nowhere\n  if (!result.destination) {\n    return;\n  }\n  const source = result.source;\n  const destination = result.destination;\n  // did not move anywhere - can bail early\n  if (\n    source.droppableId === destination.droppableId &&\n    source.index === destination.index\n  ) {\n    return;\n  }\n\n  if (result.type === \"COLUMN\") {\n    reorderListPosition(source.index, destination.index);\n    return;\n  }\n\n  reorderCardPosition(source, destination, result.draggableId);\n};\n","import \"./css/reset.css\";\nimport \"./css/global.css\";\nimport React from \"react\";\nimport Board from \"./components/Board\";\n// import GlobalStyle from \"./globalStyle\";\nimport { Reset } from \"styled-reset\";\n// import Tmp from \"./tmp\";\n\nfunction App() {\n  return (\n    <>\n      <Board></Board>\n    </>\n  );\n}\n\nexport default App;\n","import \"./devGlobal\";\nimport \"./storage\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}